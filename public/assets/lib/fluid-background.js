var canvas;const startCanvas=()=>{if(!canvas&&document.querySelector("#liquid-canvas")){canvas=document.querySelector("#liquid-canvas"),ey();var e,n,r,t,i,o,a,u,v={DYE_RESOLUTION:512,SIM_RESOLUTION:64,CAPTURE_RESOLUTION:512,DENSITY_DISSIPATION:1,VELOCITY_DISSIPATION:0,PRESSURE:0,PRESSURE_ITERATIONS:20,CURL:0,SPLAT_RADIUS:.25,SPLAT_FORCE:6e3,SHADING:!0,COLORFUL:!0,COLOR_UPDATE_SPEED:10,PAUSED:!1,BACK_COLOR:{r:4,g:12,b:32},TRANSPARENT:!0,BLOOM:!1,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:128,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7,SUNRAYS:!0,SUNRAYS_RESOLUTION:196,SUNRAYS_WEIGHT:1},f=[],c=[];f.push(new ei);var l=eo(canvas),m=l.gl,s=l.ext;ev()&&(v.DYE_RESOLUTION=512),s.supportLinearFiltering||(v.DYE_RESOLUTION=512,v.SHADING=!1,v.BLOOM=!1,v.SUNRAYS=!1);var h=function e(n,r){this.vertexShader=n,this.fragmentShaderSource=r,this.programs=[],this.activeProgram=null,this.uniforms=[]};h.prototype.setKeywords=function e(n){for(var r=0,t=0;t<n.length;t++)r+=eK(n[t]);var i=this.programs[r];if(null==i){var o=ed(m.FRAGMENT_SHADER,this.fragmentShaderSource,n);i=eh(this.vertexShader,o),this.programs[r]=i}i!=this.activeProgram&&(this.uniforms=eT(i),this.activeProgram=i)},h.prototype.bind=function e(){m.useProgram(this.activeProgram)};var T=function e(n,r){this.uniforms={},this.program=eh(n,r),this.uniforms=eT(this.program)};T.prototype.bind=function e(){m.useProgram(this.program)};var d=ed(m.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),$=ed(m.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        float offset = 1.33333333;\n        vL = vUv - texelSize * offset;\n        vR = vUv + texelSize * offset;\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),g=ed(m.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = texture2D(uTexture, vUv) * 0.29411764;\n        sum += texture2D(uTexture, vL) * 0.35294117;\n        sum += texture2D(uTexture, vR) * 0.35294117;\n        gl_FragColor = sum;\n    }\n"),x=ed(m.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        gl_FragColor = texture2D(uTexture, vUv);\n    }\n"),E=ed(m.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),R=ed(m.FRAGMENT_SHADER,"\n    precision mediump float;\n\n    uniform vec4 color;\n\n    void main () {\n        gl_FragColor = color;\n    }\n"),p=ed(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float aspectRatio;\n\n    #define SCALE 25.0\n\n    void main () {\n        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n        float v = mod(uv.x + uv.y, 2.0);\n        v = v * 0.1 + 0.8;\n        gl_FragColor = vec4(vec3(v), 1.0);\n    }\n"),S="\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uSunrays;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n\n    vec3 linearToGamma (vec3 color) {\n        color = max(color, vec3(0));\n        return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n    }\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n\n    #ifdef SHADING\n        vec3 lc = texture2D(uTexture, vL).rgb;\n        vec3 rc = texture2D(uTexture, vR).rgb;\n        vec3 tc = texture2D(uTexture, vT).rgb;\n        vec3 bc = texture2D(uTexture, vB).rgb;\n\n        float dx = length(rc) - length(lc);\n        float dy = length(tc) - length(bc);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        c *= diffuse;\n    #endif\n\n    #ifdef BLOOM\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n    #endif\n\n    #ifdef SUNRAYS\n        float sunrays = texture2D(uSunrays, vUv).r;\n        c *= sunrays;\n    #ifdef BLOOM\n        bloom *= sunrays;\n    #endif\n    #endif\n\n    #ifdef BLOOM\n        float noise = texture2D(uDithering, vUv * ditherScale).r;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 255.0;\n        bloom = linearToGamma(bloom);\n        c += bloom;\n    #endif\n\n        float a = max(c.r, max(c.g, c.b));\n        gl_FragColor = vec4(c, a);\n    }\n",D=ed(m.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),A=ed(m.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),_=ed(m.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),y=ed(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 c = texture2D(uTexture, vUv);\n        float br = max(c.r, max(c.g, c.b));\n        c.a = 1.0 - min(max(br * 20.0, 0.0), 0.8);\n        gl_FragColor = c;\n    }\n"),U=ed(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float weight;\n\n    #define ITERATIONS 16\n\n    void main () {\n        float Density = 0.3;\n        float Decay = 0.95;\n        float Exposure = 0.7;\n\n        vec2 coord = vUv;\n        vec2 dir = vUv - 0.5;\n\n        dir *= 1.0 / float(ITERATIONS) * Density;\n        float illuminationDecay = 1.0;\n\n        float color = texture2D(uTexture, vUv).a;\n\n        for (int i = 0; i < ITERATIONS; i++)\n        {\n            coord -= dir;\n            float col = texture2D(uTexture, coord).a;\n            color += col * illuminationDecay * weight;\n            illuminationDecay *= Decay;\n        }\n\n        gl_FragColor = vec4(color * Exposure, 0.0, 0.0, 1.0);\n    }\n"),L=ed(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),b=ed(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n\n    void main () {\n    #ifdef MANUAL_FILTERING\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        vec4 result = bilerp(uSource, coord, dyeTexelSize);\n    #else\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        vec4 result = texture2D(uSource, coord);\n    #endif\n        float decay = 1.0 + dissipation * dt;\n        gl_FragColor = result / decay;\n    }",s.supportLinearFiltering?null:["MANUAL_FILTERING"]),F=ed(m.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),w=ed(m.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),O=ed(m.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n\n        vec2 vel = texture2D(uVelocity, vUv).xy;\n        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n    }\n"),N=ed(m.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),B=ed(m.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),I=(m.bindBuffer(m.ARRAY_BUFFER,m.createBuffer()),m.bufferData(m.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),m.STATIC_DRAW),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,m.createBuffer()),m.bufferData(m.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),m.STATIC_DRAW),m.vertexAttribPointer(0,2,m.FLOAT,!1,0,0),m.enableVertexAttribArray(0),function(e){m.bindFramebuffer(m.FRAMEBUFFER,e),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0)}),P=[],X=new T($,g),C=new T(d,x),z=new T(d,E),M=new T(d,R),G=new T(d,p),Y=new T(d,D),H=new T(d,A),V=new T(d,_),W=new T(d,y),k=new T(d,U),q=new T(d,L),K=new T(d,b),j=new T(d,F),J=new T(d,w),Q=new T(d,O),Z=new T(d,N),ee=new T(d,B),en=new h(d,S);eA(),eg(),eC(parseInt(20*Math.random())+5);var er=Date.now(),et=0;e8(),setTimeout(()=>{window.addEventListener("mousemove",function(e){var n=f[0],r=eq(e.offsetX),t=eq(e.offsetY);e3(n,r,t)}),window.addEventListener("mouseup",function(){eY(f[0])}),window.addEventListener("touchstart",function(e){for(var n=e.targetTouches;n.length>=f.length;)f.push(new ei);for(var r=0;r<n.length;r++){var t=eq(n[r].pageX),i=eq(n[r].pageY);eG(f[r+1],n[r].identifier,t,i)}}),window.addEventListener("touchmove",function(e){for(var n=e.targetTouches,r=0;r<n.length;r++){var t=f[r+1];if(t?.down){var i=eq(n[r].pageX),o=eq(n[r].pageY);e3(t,i,o)}}},!1),window.addEventListener("touchend",function(e){for(var n=e.changedTouches,r=function(e){var r=f.find(function(r){return r.id==n[e].identifier});null!=r&&eY(r)},t=0;t<n.length;t++)r(t)})},750)}function ei(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}function eo(e){var n,r,t,i,o,a={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},u=e.getContext("webgl2",a),v=!!u;v||(u=e.getContext("webgl",a)||e.getContext("experimental-webgl",a)),v?(u.getExtension("EXT_color_buffer_float"),r=u.getExtension("OES_texture_float_linear")):(n=u.getExtension("OES_texture_half_float"),r=u.getExtension("OES_texture_half_float_linear")),u.clearColor(0,0,0,1);var f=v?u.HALF_FLOAT:n.HALF_FLOAT_OES;return v?(t=ea(u,u.RGBA16F,u.RGBA,f),i=ea(u,u.RG16F,u.RG,f),o=ea(u,u.R16F,u.RED,f)):(t=ea(u,u.RGBA,u.RGBA,f),i=ea(u,u.RGBA,u.RGBA,f),o=ea(u,u.RGBA,u.RGBA,f)),{gl:u,ext:{formatRGBA:t,formatRG:i,formatR:o,halfFloatTexType:f,supportLinearFiltering:r}}}function ea(e,n,r,t){if(!eu(e,n,r,t))switch(n){case e.R16F:return ea(e,e.RG16F,e.RG,t);case e.RG16F:return ea(e,e.RGBA16F,e.RGBA,t);default:return null}return{internalFormat:n,format:r}}function eu(e,n,r,t){var i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,n,4,4,0,r,t,null);var o=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.checkFramebufferStatus(e.FRAMEBUFFER)==e.FRAMEBUFFER_COMPLETE}function ev(){return/Mobi|Android/i.test(navigator.userAgent)}function ef(e){m.bindFramebuffer(m.FRAMEBUFFER,e.fbo);var n=e.width*e.height*4,r=new Float32Array(n);return m.readPixels(0,0,e.width,e.height,m.RGBA,m.FLOAT,r),r}function ec(e,n,r){for(var t=new Uint8Array(e.length),i=0,o=r-1;o>=0;o--)for(var a=0;a<n;a++){var u=o*n*4+4*a;t[u+0]=255*el(e[i+0]),t[u+1]=255*el(e[i+1]),t[u+2]=255*el(e[i+2]),t[u+3]=255*el(e[i+3]),i+=4}return t}function el(e){return Math.min(Math.max(e,0),1)}function em(e,n,r){var t=document.createElement("canvas"),i=t.getContext("2d");t.width=n,t.height=r;var o=i.createImageData(n,r);return o.data.set(e),i.putImageData(o,0,0),t}function es(e,n){var r=document.createElement("a");r.download=e,r.href=n,document.body.appendChild(r),r.click(),document.body.removeChild(r)}function eh(e,n){var r=m.createProgram();if(m.attachShader(r,e),m.attachShader(r,n),m.linkProgram(r),!m.getProgramParameter(r,m.LINK_STATUS))throw m.getProgramInfoLog(r);return r}function eT(e){for(var n=[],r=m.getProgramParameter(e,m.ACTIVE_UNIFORMS),t=0;t<r;t++){var i=m.getActiveUniform(e,t).name;n[i]=m.getUniformLocation(e,i)}return n}function ed(e,n,r){n=e$(n,r);var t=m.createShader(e);if(m.shaderSource(t,n),m.compileShader(t),!m.getShaderParameter(t,m.COMPILE_STATUS))throw m.getShaderInfoLog(t);return t}function e$(e,n){if(null==n)return e;var r="";return n.forEach(function(e){r+="#define "+e+"\n"}),r+e}function eg(){var o=e5(v.SIM_RESOLUTION),a=e5(v.DYE_RESOLUTION),u=s.halfFloatTexType,f=s.formatRGBA,c=s.formatRG,l=s.formatR,h=s.supportLinearFiltering?m.LINEAR:m.NEAREST;e=null==e?eR(a.width,a.height,f.internalFormat,f.format,u,h):eS(e,a.width,a.height,f.internalFormat,f.format,u,h),n=null==n?eR(o.width,o.height,c.internalFormat,c.format,u,h):eS(n,o.width,o.height,c.internalFormat,c.format,u,h),r=e0(o.width,o.height,l.internalFormat,l.format,u,m.NEAREST),t=e0(o.width,o.height,l.internalFormat,l.format,u,m.NEAREST),i=eR(o.width,o.height,l.internalFormat,l.format,u,m.NEAREST),ex(),eE()}function ex(){var e=e5(v.BLOOM_RESOLUTION),n=s.halfFloatTexType,r=s.formatRGBA,t=s.supportLinearFiltering?m.LINEAR:m.NEAREST;o=e0(e.width,e.height,r.internalFormat,r.format,n,t),P.length=0;for(var i=0;i<v.BLOOM_ITERATIONS;i++){var a=e.width>>i+1,u=e.height>>i+1;if(a<2||u<2)break;var f=e0(a,u,r.internalFormat,r.format,n,t);P.push(f)}}function eE(){var e=e5(v.SUNRAYS_RESOLUTION),n=s.halfFloatTexType,r=s.formatR,t=s.supportLinearFiltering?m.LINEAR:m.NEAREST;a=e0(e.width,e.height,r.internalFormat,r.format,n,t),u=e0(e.width,e.height,r.internalFormat,r.format,n,t)}function e0(e,n,r,t,i,o){m.activeTexture(m.TEXTURE0);var a=m.createTexture();m.bindTexture(m.TEXTURE_2D,a),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,o),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,o),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),m.texImage2D(m.TEXTURE_2D,0,r,e,n,0,t,i,null);var u=m.createFramebuffer();return m.bindFramebuffer(m.FRAMEBUFFER,u),m.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,m.TEXTURE_2D,a,0),m.viewport(0,0,e,n),m.clear(m.COLOR_BUFFER_BIT),{texture:a,fbo:u,width:e,height:n,texelSizeX:1/e,texelSizeY:1/n,attach:function e(n){return m.activeTexture(m.TEXTURE0+n),m.bindTexture(m.TEXTURE_2D,a),n}}}function eR(e,n,r,t,i,o){var a=e0(e,n,r,t,i,o),u=e0(e,n,r,t,i,o);return{width:e,height:n,texelSizeX:a.texelSizeX,texelSizeY:a.texelSizeY,get read(){return a},set read(value){a=value},get write(){return u},set write(value){u=value},swap:function e(){var n=a;a=u,u=n}}}function ep(e,n,r,t,i,o,a){var u=e0(n,r,t,i,o,a);return C.bind(),m.uniform1i(C.uniforms.uTexture,e.attach(0)),I(u.fbo),u}function eS(e,n,r,t,i,o,a){return e.width==n&&e.height==r||(e.read=ep(e.read,n,r,t,i,o,a),e.write=e0(n,r,t,i,o,a),e.width=n,e.height=r,e.texelSizeX=1/n,e.texelSizeY=1/r),e}function eD(e){var n=m.createTexture();m.bindTexture(m.TEXTURE_2D,n),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.LINEAR),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.LINEAR),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.REPEAT),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.REPEAT),m.texImage2D(m.TEXTURE_2D,0,m.RGB,1,1,0,m.RGB,m.UNSIGNED_BYTE,new Uint8Array([255,255,255]));var r={texture:n,width:1,height:1,attach:function e(r){return m.activeTexture(m.TEXTURE0+r),m.bindTexture(m.TEXTURE_2D,n),r}},t=new Image;return t.onload=function(){r.width=t.width,r.height=t.height,m.bindTexture(m.TEXTURE_2D,n),m.texImage2D(m.TEXTURE_2D,0,m.RGB,m.RGB,m.UNSIGNED_BYTE,t)},t.src=e,r}function eA(){var e=[];v.SHADING&&e.push("SHADING"),v.BLOOM&&e.push("BLOOM"),v.SUNRAYS&&e.push("SUNRAYS"),en.setKeywords(e)}function e8(){var e=e_();ey()&&eg(),eU(e),eL(),v.PAUSED||eb(e),eF(null),requestAnimationFrame(e8)}function e_(){var e=Date.now(),n=(e-er)/1e3;return n=Math.min(n,.016666),er=e,n}function ey(){var e,n;try{if(e=eq(canvas.clientWidth),n=eq(canvas.clientHeight),canvas.width!=e||canvas.height!=n)return canvas.width=e,canvas.height=n,!0;return!1}catch(r){}}function eU(e){v.COLORFUL&&(et+=e*v.COLOR_UPDATE_SPEED)>=1&&(et=eW(et,0,1),f.forEach(function(e){e.color=e2()}))}function eL(){c.length>0&&eC(c.pop()),f.forEach(function(e){e.moved&&(e.moved=!1,eX(e))})}function eb(o){m.disable(m.BLEND),m.viewport(0,0,n.width,n.height),J.bind(),m.uniform2f(J.uniforms.texelSize,n.texelSizeX,n.texelSizeY),m.uniform1i(J.uniforms.uVelocity,n.read.attach(0)),I(t.fbo),Q.bind(),m.uniform2f(Q.uniforms.texelSize,n.texelSizeX,n.texelSizeY),m.uniform1i(Q.uniforms.uVelocity,n.read.attach(0)),m.uniform1i(Q.uniforms.uCurl,t.attach(1)),m.uniform1f(Q.uniforms.curl,v.CURL),m.uniform1f(Q.uniforms.dt,o),I(n.write.fbo),n.swap(),j.bind(),m.uniform2f(j.uniforms.texelSize,n.texelSizeX,n.texelSizeY),m.uniform1i(j.uniforms.uVelocity,n.read.attach(0)),I(r.fbo),z.bind(),m.uniform1i(z.uniforms.uTexture,i.read.attach(0)),m.uniform1f(z.uniforms.value,v.PRESSURE),I(i.write.fbo),i.swap(),Z.bind(),m.uniform2f(Z.uniforms.texelSize,n.texelSizeX,n.texelSizeY),m.uniform1i(Z.uniforms.uDivergence,r.attach(0));for(var a=0;a<v.PRESSURE_ITERATIONS;a++)m.uniform1i(Z.uniforms.uPressure,i.read.attach(1)),I(i.write.fbo),i.swap();ee.bind(),m.uniform2f(ee.uniforms.texelSize,n.texelSizeX,n.texelSizeY),m.uniform1i(ee.uniforms.uPressure,i.read.attach(0)),m.uniform1i(ee.uniforms.uVelocity,n.read.attach(1)),I(n.write.fbo),n.swap(),K.bind(),m.uniform2f(K.uniforms.texelSize,n.texelSizeX,n.texelSizeY),s.supportLinearFiltering||m.uniform2f(K.uniforms.dyeTexelSize,n.texelSizeX,n.texelSizeY);var u=n.read.attach(0);m.uniform1i(K.uniforms.uVelocity,u),m.uniform1i(K.uniforms.uSource,u),m.uniform1f(K.uniforms.dt,o),m.uniform1f(K.uniforms.dissipation,v.VELOCITY_DISSIPATION),I(n.write.fbo),n.swap(),m.viewport(0,0,e.width,e.height),s.supportLinearFiltering||m.uniform2f(K.uniforms.dyeTexelSize,e.texelSizeX,e.texelSizeY),m.uniform1i(K.uniforms.uVelocity,n.read.attach(0)),m.uniform1i(K.uniforms.uSource,e.read.attach(1)),m.uniform1f(K.uniforms.dissipation,v.DENSITY_DISSIPATION),I(e.write.fbo),e.swap()}function eF(n){v.BLOOM&&eB(e.read,o),v.SUNRAYS&&(eI(e.read,e.write,a),eP(a,u,1)),null!=n&&v.TRANSPARENT?m.disable(m.BLEND):(m.blendFunc(m.ONE,m.ONE_MINUS_SRC_ALPHA),m.enable(m.BLEND));var r=null==n?m.drawingBufferWidth:n.width,t=null==n?m.drawingBufferHeight:n.height;m.viewport(0,0,r,t);var i=null==n?null:n.fbo;v.TRANSPARENT||ew(i,e4(v.BACK_COLOR)),null==n&&v.TRANSPARENT,eN(i,r,t)}function ew(e,n){M.bind(),m.uniform4f(M.uniforms.color,n.r,n.g,n.b,1),I(e)}function eO(e){G.bind(),m.uniform1f(G.uniforms.aspectRatio,canvas.width/canvas.height),I(e)}function eN(n,r,t){if(en.bind(),v.SHADING&&m.uniform2f(en.uniforms.texelSize,1/r,1/t),m.uniform1i(en.uniforms.uTexture,e.read.attach(0)),v.BLOOM){m.uniform1i(en.uniforms.uBloom,o.attach(1)),m.uniform1i(en.uniforms.uDithering,ditheringTexture.attach(2));var i=ek(ditheringTexture,r,t);m.uniform2f(en.uniforms.ditherScale,i.x,i.y)}v.SUNRAYS&&m.uniform1i(en.uniforms.uSunrays,a.attach(3)),I(n)}function eB(e,n){if(!(P.length<2)){var r=n;m.disable(m.BLEND),Y.bind();var t=v.BLOOM_THRESHOLD*v.BLOOM_SOFT_KNEE+1e-4,i=v.BLOOM_THRESHOLD-t;m.uniform3f(Y.uniforms.curve,i,2*t,.25/t),m.uniform1f(Y.uniforms.threshold,v.BLOOM_THRESHOLD),m.uniform1i(Y.uniforms.uTexture,e.attach(0)),m.viewport(0,0,r.width,r.height),I(r.fbo),H.bind();for(var o=0;o<P.length;o++){var a=P[o];m.uniform2f(H.uniforms.texelSize,r.texelSizeX,r.texelSizeY),m.uniform1i(H.uniforms.uTexture,r.attach(0)),m.viewport(0,0,a.width,a.height),I(a.fbo),r=a}m.blendFunc(m.ONE,m.ONE),m.enable(m.BLEND);for(var u=P.length-2;u>=0;u--){var f=P[u];m.uniform2f(H.uniforms.texelSize,r.texelSizeX,r.texelSizeY),m.uniform1i(H.uniforms.uTexture,r.attach(0)),m.viewport(0,0,f.width,f.height),I(f.fbo),r=f}m.disable(m.BLEND),V.bind(),m.uniform2f(V.uniforms.texelSize,r.texelSizeX,r.texelSizeY),m.uniform1i(V.uniforms.uTexture,r.attach(0)),m.uniform1f(V.uniforms.intensity,v.BLOOM_INTENSITY),m.viewport(0,0,n.width,n.height),I(n.fbo)}}function eI(e,n,r){m.disable(m.BLEND),W.bind(),m.uniform1i(W.uniforms.uTexture,e.attach(0)),m.viewport(0,0,n.width,n.height),I(n.fbo),k.bind(),m.uniform1f(k.uniforms.weight,v.SUNRAYS_WEIGHT),m.uniform1i(k.uniforms.uTexture,n.attach(0)),m.viewport(0,0,r.width,r.height),I(r.fbo)}function eP(e,n,r){X.bind();for(var t=0;t<r;t++)m.uniform2f(X.uniforms.texelSize,e.texelSizeX,0),m.uniform1i(X.uniforms.uTexture,e.attach(0)),I(n.fbo),m.uniform2f(X.uniforms.texelSize,0,e.texelSizeY),m.uniform1i(X.uniforms.uTexture,n.attach(0)),I(e.fbo)}function eX(e){var n=e.deltaX*v.SPLAT_FORCE,r=e.deltaY*v.SPLAT_FORCE;ez(e.texcoordX,e.texcoordY,n,r,e.color)}function eC(e){for(var n=0;n<e;n++){var r=e2();r.r*=10,r.g*=10,r.b*=10,ez(Math.random(),Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),r)}}function ez(r,t,i,o,a){m.viewport(0,0,n.width,n.height),q.bind(),m.uniform1i(q.uniforms.uTarget,n.read.attach(0)),m.uniform1f(q.uniforms.aspectRatio,canvas.width/canvas.height),m.uniform2f(q.uniforms.point,r,t),m.uniform3f(q.uniforms.color,i,o,0),m.uniform1f(q.uniforms.radius,eM(v.SPLAT_RADIUS/100)),I(n.write.fbo),n.swap(),m.viewport(0,0,e.width,e.height),m.uniform1i(q.uniforms.uTarget,e.read.attach(0)),m.uniform3f(q.uniforms.color,a.r,a.g,a.b),I(e.write.fbo),e.swap()}function eM(e){var n=canvas.width/canvas.height;return n>1&&(e*=n),e}function eG(e,n,r,t){e.id=n,e.down=!0,e.moved=!1,e.texcoordX=r/canvas.width,e.texcoordY=1-t/canvas.height,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.deltaX=0,e.deltaY=0,e.color=e2()}function e3(e,n,r){try{e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.texcoordX=n/canvas.width,e.texcoordY=1-r/canvas.height,e.deltaX=eH(e.texcoordX-e.prevTexcoordX),e.deltaY=e1(e.texcoordY-e.prevTexcoordY),e.moved=Math.abs(e.deltaX)>0||Math.abs(e.deltaY)>0}catch(t){}}function eY(e){e.down=!0}function eH(e){var n=canvas.width/canvas.height;return n<1&&(e*=n),e}function e1(e){var n=canvas.width/canvas.height;return n>1&&(e/=n),e}function e2(){var e=eV(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function eV(e,n,r){var t,i,o,a,u,v,f,c;switch(a=Math.floor(6*e),u=6*e-a,v=r*(1-n),f=r*(1-u*n),c=r*(1-(1-u)*n),a%6){case 0:t=r,i=c,o=v;break;case 1:t=f,i=r,o=v;break;case 2:t=v,i=r,o=c;break;case 3:t=v,i=f,o=r;break;case 4:t=c,i=v,o=r;break;case 5:t=r,i=v,o=f}return{r:t,g:i,b:o}}function e4(e){return{r:e.r/255,g:e.g/255,b:e.b/255}}function eW(e,n,r){var t=r-n;return 0==t?n:(e-n)%t+n}function e5(e){var n=m.drawingBufferWidth/m.drawingBufferHeight;n<1&&(n=1/n);var r=Math.round(e),t=Math.round(e*n);return m.drawingBufferWidth>m.drawingBufferHeight?{width:t,height:r}:{width:r,height:t}}function ek(e,n,r){return{x:n/e.width,y:r/e.height}}function eq(e){return Math.floor(e*(window.devicePixelRatio||1))}function eK(e){if(0==e.length)return 0;for(var n=0,r=0;r<e.length;r++)n=(n<<5)-n+e.charCodeAt(r),n|=0;return n}};window.onload=setInterval(startCanvas,750);
